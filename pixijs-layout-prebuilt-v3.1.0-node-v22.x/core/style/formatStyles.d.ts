import { Layout } from '../Layout';
import { LayoutStyles } from './layoutStyles';
/**
 * Formats the layout styles for the layout
 * @param layout - The layout to format the styles for
 * @param style - The style to apply to the layout
 */
export declare function formatStyles(layout: Layout, style: LayoutStyles): {
    custom: {
        width?: import('../types').NumberValue | "auto" | "intrinsic";
        height?: import('../types').NumberValue | "auto" | "intrinsic";
        borderRadius?: number;
        backgroundColor?: import('pixi.js').ColorSource;
        borderColor?: import('pixi.js').ColorSource;
        transformOrigin?: import('../types').PositionSpecifier;
        objectFit?: "fill" | "contain" | "cover" | "none" | "scale-down";
        objectPosition?: import('../types').PositionSpecifier;
        applySizeDirectly?: boolean;
        isLeaf?: boolean;
        debug?: boolean;
        debugHeat?: boolean;
        debugDrawMargin?: boolean;
        debugDrawPadding?: boolean;
        debugDrawBorder?: boolean;
        debugDrawFlex?: boolean;
        debugDrawContent?: boolean;
        alignContent?: import('./yogaStyles').AlignContent;
        alignItems?: import('./yogaStyles').AlignItems;
        alignSelf?: import('./yogaStyles').AlignItems;
        aspectRatio?: number;
        borderBottomWidth?: number;
        borderEndWidth?: number;
        borderLeftWidth?: number;
        borderRightWidth?: number;
        borderStartWidth?: number;
        borderTopWidth?: number;
        borderWidth?: number;
        borderInlineWidth?: number;
        borderBlockWidth?: number;
        bottom?: import('../types').NumberValue;
        left?: import('../types').NumberValue;
        right?: import('../types').NumberValue;
        top?: import('../types').NumberValue;
        end?: import('../types').NumberValue;
        start?: import('../types').NumberValue;
        boxSizing?: "border-box" | "content-box";
        direction?: "ltr" | "rtl";
        display?: "none" | "flex" | "contents";
        flex?: number;
        flexBasis?: import('../types').NumberValue | "auto";
        flexDirection?: "row" | "column" | "row-reverse" | "column-reverse";
        rowGap?: number;
        gap?: number;
        columnGap?: number;
        flexGrow?: number;
        flexShrink?: number;
        flexWrap?: "wrap" | "nowrap" | "wrap-reverse";
        justifyContent?: import('./yogaStyles').JustifyContent;
        margin?: import('../types').NumberValue | "auto";
        marginBottom?: import('../types').NumberValue | "auto";
        marginEnd?: import('../types').NumberValue | "auto";
        marginLeft?: import('../types').NumberValue | "auto";
        marginRight?: import('../types').NumberValue | "auto";
        marginStart?: import('../types').NumberValue | "auto";
        marginTop?: import('../types').NumberValue | "auto";
        marginInline?: import('../types').NumberValue | "auto";
        marginBlock?: import('../types').NumberValue | "auto";
        maxHeight?: import('../types').NumberValue;
        maxWidth?: import('../types').NumberValue;
        minHeight?: import('../types').NumberValue;
        minWidth?: import('../types').NumberValue;
        overflow?: "visible" | "hidden" | "scroll";
        padding?: import('../types').NumberValue;
        paddingBottom?: import('../types').NumberValue;
        paddingEnd?: import('../types').NumberValue;
        paddingLeft?: import('../types').NumberValue;
        paddingRight?: import('../types').NumberValue;
        paddingStart?: import('../types').NumberValue;
        paddingTop?: import('../types').NumberValue;
        paddingInline?: import('../types').NumberValue;
        paddingBlock?: import('../types').NumberValue;
        insetInline?: import('../types').NumberValue;
        insetBlock?: import('../types').NumberValue;
        inset?: import('../types').NumberValue;
        position?: "absolute" | "relative" | "static";
    };
    yoga: {
        alignContent?: import('./yogaStyles').AlignContent;
        alignItems?: import('./yogaStyles').AlignItems;
        alignSelf?: import('./yogaStyles').AlignItems;
        aspectRatio?: number;
        borderBottomWidth?: number;
        borderEndWidth?: number;
        borderLeftWidth?: number;
        borderRightWidth?: number;
        borderStartWidth?: number;
        borderTopWidth?: number;
        borderWidth?: number;
        borderInlineWidth?: number;
        borderBlockWidth?: number;
        bottom?: import('../types').NumberValue;
        left?: import('../types').NumberValue;
        right?: import('../types').NumberValue;
        top?: import('../types').NumberValue;
        end?: import('../types').NumberValue;
        start?: import('../types').NumberValue;
        boxSizing?: "border-box" | "content-box";
        direction?: "ltr" | "rtl";
        display?: "none" | "flex" | "contents";
        flex?: number;
        flexBasis?: import('../types').NumberValue | "auto";
        flexDirection?: "row" | "column" | "row-reverse" | "column-reverse";
        rowGap?: number;
        gap?: number;
        columnGap?: number;
        flexGrow?: number;
        flexShrink?: number;
        flexWrap?: "wrap" | "nowrap" | "wrap-reverse";
        justifyContent?: import('./yogaStyles').JustifyContent;
        margin?: import('../types').NumberValue | "auto";
        marginBottom?: import('../types').NumberValue | "auto";
        marginEnd?: import('../types').NumberValue | "auto";
        marginLeft?: import('../types').NumberValue | "auto";
        marginRight?: import('../types').NumberValue | "auto";
        marginStart?: import('../types').NumberValue | "auto";
        marginTop?: import('../types').NumberValue | "auto";
        marginInline?: import('../types').NumberValue | "auto";
        marginBlock?: import('../types').NumberValue | "auto";
        width?: import('../types').NumberValue | "auto";
        height?: import('../types').NumberValue | "auto";
        maxHeight?: import('../types').NumberValue;
        maxWidth?: import('../types').NumberValue;
        minHeight?: import('../types').NumberValue;
        minWidth?: import('../types').NumberValue;
        overflow?: "visible" | "hidden" | "scroll";
        padding?: import('../types').NumberValue;
        paddingBottom?: import('../types').NumberValue;
        paddingEnd?: import('../types').NumberValue;
        paddingLeft?: import('../types').NumberValue;
        paddingRight?: import('../types').NumberValue;
        paddingStart?: import('../types').NumberValue;
        paddingTop?: import('../types').NumberValue;
        paddingInline?: import('../types').NumberValue;
        paddingBlock?: import('../types').NumberValue;
        insetInline?: import('../types').NumberValue;
        insetBlock?: import('../types').NumberValue;
        inset?: import('../types').NumberValue;
        position?: "absolute" | "relative" | "static";
    };
};
